generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ingredient_region {
  region_id     Int
  ingredient_id Int
  price         Decimal?       @db.Decimal(8, 2)
  stock         Int?
  ing_reg_id    Int            @id(map: "ing_reg_pk") @default(autoincrement())
  supplier_id   Int?
  ingredients   ingredients    @relation(fields: [ingredient_id], references: [ingredient_id], onDelete: Cascade, map: "ingredient_fk")
  region        region         @relation(fields: [region_id], references: [region_id], onDelete: Cascade, map: "region_fk")
  supplier      supplier?      @relation(fields: [supplier_id], references: [supplier_id], onDelete: Cascade, map: "supplier_fk")
  order_detail  order_detail[] @ignore
}

model ingredient_supplier {
  ingredient_id Int
  supplier_id   Int
  ingredients   ingredients @relation(fields: [ingredient_id], references: [ingredient_id], onDelete: Cascade)
  supplier      supplier    @relation(fields: [supplier_id], references: [supplier_id], onDelete: Cascade)

  @@id([ingredient_id, supplier_id])
}

model ingredients {
  ingredient_id       Int                   @id @default(autoincrement())
  ingredient_name     String?               @db.VarChar(250)
  flag                Boolean?              @default(true)
  img                 String?               @db.VarChar(250)
  ingredient_region   ingredient_region[]
  ingredient_supplier ingredient_supplier[]
}

model order {
  timestamp    DateTime?      @db.Timestamp(6)
  total_price  Decimal?       @db.Decimal(8, 2)
  order_id     Int            @id(map: "order_pk") @default(autoincrement())
  order_detail order_detail[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model order_detail {
  base_id           Int?
  ingredient_id     Int?
  order_id          Int?
  ingredient_region ingredient_region? @relation(fields: [ingredient_id], references: [ing_reg_id], onDelete: Cascade, map: "ingredient_fk")
  order             order?             @relation(fields: [order_id], references: [order_id], onDelete: Cascade, map: "order_fk")
  pizza_base        pizza_base?        @relation(fields: [base_id], references: [base_id], onDelete: Cascade, map: "orders_base_id_fkey")

  @@ignore
}

model pizza_base {
  base_id      Int            @id
  base_size    String?        @db.VarChar
  price        Decimal?       @db.Decimal(8, 2)
  order_detail order_detail[] @ignore
}

model region {
  region_id         Int                 @id
  region_name       String?             @db.VarChar(500)
  ingredient_region ingredient_region[]
}

model supplier {
  supplier_id         Int                   @id @default(autoincrement())
  supplier_name       String?               @db.VarChar
  hidden              Boolean?              @default(true)
  ingredient_region   ingredient_region[]
  ingredient_supplier ingredient_supplier[]
}
